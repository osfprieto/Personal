/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Component;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

import model.Laberinto;

/**
 *
 * @author DarkFulgoreII
 */
@SuppressWarnings("serial")
public class FrameLaberinto extends javax.swing.JFrame {

    /**
     * Creates new form FrameLaberinto
     */
    public FrameLaberinto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable()
        {
            public Component prepareRenderer ( TableCellRenderer r, int row, int col )
            {
            	
            	Component comp = super.prepareRenderer( r, row, col );
                
                if ( jTable1.getValueAt( row, col ) .equals (" ") )
                {
                	comp.setBackground( Color.WHITE );
                }
                else if(jTable1.getValueAt( row, col ) .equals ("I") )
                {
                	comp.setBackground( Color.GREEN );
                }
                else if(jTable1.getValueAt( row, col ) .equals ("F") )
                {
                	comp.setBackground( Color.RED );
                }
                else if(jTable1.getValueAt( row, col ) .equals ("<") || jTable1.getValueAt( row, col ) .equals (">") || jTable1.getValueAt( row, col ) .equals ("^") || jTable1.getValueAt( row, col ) .equals ("V") )
                {
                	comp.setBackground( Color.BLUE );
                }
                else
                {
                	comp.setBackground( Color.BLACK );
                }
                  
                return comp;
            }
        };
        jLabel1 = new javax.swing.JLabel();
        btnCargar = new javax.swing.JButton();
        btnResolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}
                
            },
            new String [] {
                "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" 
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Laberinto");

        btnCargar.setText("Cargar");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnResolver.setText("Resolver");
        btnResolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnResolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCargar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCargar)
                        .addComponent(btnResolver)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void btnResolverActionPerformed(java.awt.event.ActionEvent evt) {
        this.laberinto.resolver();
        this.refrescarTablaLaberinto();
    }

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {
    	JFileChooser jfcExaminarEntrada;
    	jfcExaminarEntrada = new JFileChooser();
    	jfcExaminarEntrada.setCurrentDirectory(new File("."));
    	if(jfcExaminarEntrada.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
    	{
    		this.laberinto.cargarArchivo(jfcExaminarEntrada.getSelectedFile());
    		this.refrescarTablaLaberinto();
    	}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrameLaberinto().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnResolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration
    private Laberinto laberinto = new Laberinto();
    //private int cont = 2;
    
    private void refrescarTablaLaberinto()
    {
    	TableModel tm = jTable1.getModel();
    	String[][] tablero=this.laberinto.getTablero();
    	for (int i = 0; i < tablero.length; i++) {
			for (int j = 0; j < tablero[i].length; j++) {
				
				String valor = tablero[i][j];
				if(valor.equals("1"))
				{
					tm.setValueAt(" ", i, j);
				}
				else if (valor.equals(Laberinto.MURO))
				{
					tm.setValueAt(Laberinto.VACIO, i, j);
				}
				else if (valor.equals(Laberinto.SALIDA))
				{
					tm.setValueAt("I", i, j);
				}
				else if (valor.equals(Laberinto.LLEGADA))
				{
					tm.setValueAt("F", i, j);
				}
				else
				{
					tm.setValueAt(valor, i, j);
				}
					
				
			}
		}
    	this.jTable1.setModel(tm);
    	//this.jTable1.setSelectionMode(JTable.)(false);
    	
    }
}

